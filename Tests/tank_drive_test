import evdev
from evdev import InputDevice, ecodes
from roboclaw_3 import Roboclaw

# Initialize Roboclaw
roboclaw = Roboclaw("/dev/ttyS0", 115200)
roboclaw.Open()
address = 0x80  # Roboclaw address

# Locate the PS4 controller


def find_ps4_controller():
    devices = [InputDevice(path) for path in evdev.list_devices()]
    for device in devices:
        if "Wireless Controller" in device.name:
            return device
    raise RuntimeError("PS4 controller not found! Ensure it's connected.")


# Initialize controller
controller = find_ps4_controller()
print(f"Connected to {controller.name} at {controller.path}")

# Function to set motor speed


def set_motor_speed(motor, speed):
    speed = max(0, min(127, speed))  # Ensure speed is within 0-127 range
    if motor == 1:
        roboclaw.ForwardM1(address, speed)
    elif motor == 2:
        roboclaw.ForwardM2(address, speed)


# Read events from the controller
try:
    print("Reading joystick positions. Move the joysticks to control the motors.")
    for event in controller.read_loop():
        if event.type == ecodes.EV_ABS:
            if event.code == ecodes.ABS_Y:  # Left joystick vertical
                left_speed = event.value - 128
                if left_speed > 0:
                    set_motor_speed(1, left_speed)
                else:
                    set_motor_speed(1, 0)
            elif event.code == ecodes.ABS_RY:  # Right joystick vertical
                right_speed = event.value - 128
                if right_speed > 0:
                    set_motor_speed(2, right_speed)
                else:
                    set_motor_speed(2, 0)
            print(
                f"Left Motor Speed: {left_speed if left_speed > 0 else 0} | Right Motor Speed: {right_speed if right_speed > 0 else 0}")

except KeyboardInterrupt:
    # Stop motors on exit
    set_motor_speed(1, 0)
    set_motor_speed(2, 0)
    print("\nExiting...")
