import evdev
from evdev import InputDevice, ecodes
import time
import threading
from roboclaw_3 import Roboclaw

# Initialize Roboclaw
roboclaw = Roboclaw("/dev/ttyS0", 115200)
roboclaw.Open()
address = 0x80  # Roboclaw address

# Joystick axis mappings
AXIS_CODES = {'LEFT_Y': ecodes.ABS_Y, 'RIGHT_Y': ecodes.ABS_RY}

# Shared variables for joystick positions
joystick_positions = {'LEFT_Y': 128, 'RIGHT_Y': 128}
lock = threading.Lock()  # Lock for thread safety

# Locate the PS4 controller


def find_ps4_controller():
    for path in evdev.list_devices():
        device = InputDevice(path)
        if "Wireless Controller" in device.name:
            return device
    raise RuntimeError("PS4 controller not found! Ensure it's connected.")


# Initialize controller
controller = find_ps4_controller()
controller.grab()  # Ensure exclusive access
print(f"Connected to {controller.name} at {controller.path}")

# Function to continuously read joystick positions


def poll_joystick():
    print("Starting joystick polling thread.")
    for event in controller.read_loop():
        if event.type == ecodes.EV_ABS and event.code in AXIS_CODES.values():
            with lock:
                if event.code == ecodes.ABS_Y:
                    joystick_positions['LEFT_Y'] = event.value
                elif event.code == ecodes.ABS_RY:
                    joystick_positions['RIGHT_Y'] = event.value

# Function to send motor commands every 0.5 seconds


def send_motor_commands():
    print("Starting motor command thread.")
    while True:
        time.sleep(0.5)  # Send updates every 0.5s
        with lock:
            left_speed = max(0, joystick_positions['LEFT_Y'] - 128)

        roboclaw.ForwardM1(address, left_speed)
        print(f"Sent Left Speed: {left_speed}")


# Start both threads
motor_thread = threading.Thread(target=send_motor_commands, daemon=True)

joystick_thread.start()
motor_thread.start()

# Keep the main thread running
try:
    while True:
        poll_joystick()
except KeyboardInterrupt:
    roboclaw.ForwardM1(address, 0)
    roboclaw.ForwardM2(address, 0)
    print("\nExiting...")
