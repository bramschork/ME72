import time
from time import sleep
import threading
import evdev
from evdev import InputDevice, ecodes
from roboclaw_3 import Roboclaw

# Initialize Roboclaw
roboclaw = Roboclaw("/dev/ttyS0", 115200)
roboclaw.Open()
address = 0x80  # Roboclaw address

# Joystick axis mappings
AXIS_CODES = {'LEFT_Y': ecodes.ABS_Y, 'RIGHT_Y': ecodes.ABS_RY}
joystick_positions = {'LEFT_Y': 128, 'RIGHT_Y': 128}

# Locate the PS4 controller


def find_ps4_controller():
    for path in evdev.list_devices():
        device = InputDevice(path)
        if "Wireless Controller" in device.name:
            return device
    raise RuntimeError("PS4 controller not found! Ensure it's connected.")


# Initialize controller
controller = find_ps4_controller()
controller.grab()  # Ensure exclusive access
print(f"Connected to {controller.name} at {controller.path}")


# Poll joysticks every 0.5 seconds, print values, and send motor commands
while True:

    print("Polling joystick every 0.5s. Move the joysticks to control the motors.")
    # Roboclaw 1 - Motor 1
    roboclaw.ForwardM1(address, 20)
    sleep(2)
    roboclaw.ForwardM1(address, 0)
    sleep(0.5)

    # Roboclaw 1 - Motor 2
    roboclaw.ForwardM2(address, 20)
    sleep(2)
    roboclaw.ForwardM2(address, 0)
    sleep(2)

    roboclaw.ForwardM1(address, 0)
    roboclaw.ForwardM2(address, 0)


while True:
    # Read and print joystick positions
    try:
        print("Reading joystick positions. Move the joysticks to see the output.")
        for event in controller.read_loop():
            if event.type == ecodes.EV_ABS:
                if event.code in AXIS_CODES.values():
                    for axis_name, axis_code in AXIS_CODES.items():
                        if event.code == axis_code:
                            joystick_positions[axis_name] = event.value
                            if joystick_positions['LEFT_Y'] > 128:
                                roboclaw.ForwardM1(
                                    address, Joystick_positions['LEFT_Y']-128)
                            print(
                                f"Left Joystick Y: {joystick_positions['LEFT_Y']} | Right Joystick Y: {joystick_positions['RIGHT_Y']}")
                            sleep(0.2)

    except KeyboardInterrupt:
        # Stop motors on exit
        roboclaw.ForwardM1(address, 0)
        roboclaw.ForwardM2(address, 0)
        print("\nExiting...")
